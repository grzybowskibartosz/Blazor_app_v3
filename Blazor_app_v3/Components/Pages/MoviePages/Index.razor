@page "/movies"
@using Microsoft.AspNetCore.Components.QuickGrid
@inject Blazor_app_v3.Data.ApplicationDbContext DB
@using Blazor_app_v3.Components.Classes
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode InteractiveServer



<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="movies/create">Create New</a>
</p>

<QuickGrid Items="@SortedMovies">
    <PropertyColumn Property="@(movie => movie.Title)" Sortable="true"> </PropertyColumn>
    @if (isUserAuthtenticated)
    {
        <PropertyColumn Property="movie => movie.Description" Sortable="true" />
    }
    <PropertyColumn Property="movie => movie.RelaseDate" Format="dd.MM.yyyy" Sortable="true" />
    <PropertyColumn Property="movie => movie.AverageRating" Format="0.00" Sortable="true" />

    <TemplateColumn Context="movie">
        <a href="@($"movies/edit?id={movie.Id}")">Edit</a> |
        <a href="@($"movies/details?id={movie.Id}")">Details</a> |
        <a href="@($"movies/delete?id={movie.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>


@code {
    IQueryable<Movie> SortedMovies = Enumerable.Empty<Movie>().AsQueryable();

    [SupplyParameterFromForm]
    Movie movie { get; set; } = new();
    DateOnly SelectedDate;
    static List<Movie> MoviesList = new();

    private bool isUserAuthtenticated;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isUserAuthtenticated = authState.User.Identity.IsAuthenticated;
    }

    protected override void OnInitialized()
    {
        ConvertListToQueryable();

        //SortedMovies = DB.Movie;
    }

    private void ConvertListToQueryable()
    {
        MoviesList = DB.Movie.ToList();
        if (MoviesList is null) return;
        foreach (var movie in MoviesList.OrderBy(_ => _.Id))
        {
            SortedMovies = SortedMovies.Concat(new[] { movie }.AsQueryable());
        }
    }

    void GetDataAgain()
    {
        SortedMovies = Enumerable.Empty<Movie>().AsQueryable();
        ConvertListToQueryable();
    }

}